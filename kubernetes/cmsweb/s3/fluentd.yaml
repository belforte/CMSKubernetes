---
# Source: fluentd/templates/fluentd-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd-sa
  namespace: kube-system
---
# Source: fluentd/templates/fluentd-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluentd
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - list
  - watch
---
# Source: fluentd/templates/fluentd-rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fluentd
roleRef:
  kind: ClusterRole
  name: fluentd
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: fluentd-sa
  namespace: kube-system
---
# Source: fluentd/templates/fluentd-daemon.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cmsweb-k8s-prodsrv2
  namespace: kube-system
  labels:
    k8s-app: fluentd-logging
    version: v1
    kubernetes.io/cluster-service: "true"
spec:
  selector:
    matchLabels:
      k8s-app: fluentd-logging
  updateStrategy:
    # when updating, restart all pods
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 100%
  template:
    metadata:
      labels:
        k8s-app: fluentd-logging
        version: v1
        kubernetes.io/cluster-service: "true"
      annotations:
        # update on configmap change
        checksum/config-map: f9a2d5c985cd5eaabdb7cb08f20a5efff98c13111c29c079076cc25e8794c229
    spec:
      serviceAccount: fluentd-sa
      serviceAccountName: fluentd-sa
      securityContext:
        seLinuxOptions:
          type: "spc_t"
      initContainers:
      - name: disableipv6
        image: ubuntu:20.04
        command: ["/bin/bash", "-c", "sysctl -w net.ipv6.conf.all.disable_ipv6=1"]
        securityContext:
            runAsUser: 0        # run as root
            runAsGroup: 0
            allowPrivilegeEscalation: true
      containers:
      - name: fluentd
        image: fluent/fluentd-kubernetes-daemonset:v1.16.2-debian-s3
        command: ["/bin/sh", "-c", "/etc/fluent/install-plugins.sh"]
        securityContext:
            runAsUser: 0        # run as root
            runAsGroup: 0
            allowPrivilegeEscalation: true
        env:
          - name: FLUENTD_ARGS
            value: --no-supervisor
          - name: OUTPUT_PRODUCER
            value: magnum
          - name: OUTPUT_ENDPOINT
            value: http://monit-logs.cern.ch:10012/
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: s3-data
          mountPath: /var/log/fluent/s3
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: etcfluentd
          mountPath: /etc/fluent/
      terminationGracePeriodSeconds: 30
      volumes:
      - name: s3-data
        emptyDir:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: etcfluentd
        configMap:
          name: fluentd
          defaultMode: 0777
